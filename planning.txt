The Planning
Done:
-- add support for setter/getter fields with @Update.
-- fix collection persistence for facade collections (setter call at the end) with @Update.
-- check select for postgres embedded id autocompleteId with id and count.
-- maxResults und firstResult for all filter requests and list all.
-- add object query param to autocomplete.
-- support for filter in embedded id oder sub entitites (ex id.key1=abcd).
-- optimize and extend query parameter filter.
-- refactor postFilterContentInAsList with Map<String,List<Object>>.
-- optimize has Field method and move in ClassReflector (was optimized so good that wasn't needed anymore) - deleted.
-- add length to @Update.
-- add equals for update fields (implement equals method for test).
-- remove @NotNull on static methods (see build log)
-- add support for @Column nullable, insertable and updatable.
-- add findby id query
-- add order by id in autocomplete by id
-- add base class for AbstractTest
- add postCreate postChange in creator
- fix autocompleteidsStringvalue as sotred set remove equals
- add sort support
- add class prefix to named queries findbyID, delete by id, findAll, delete all
- add list all query (with params)
- fix deleteById remove Type
- add unit tests for findById, deleteById, list all
- fix add . in orderBy regex
- add Named query for delete all
Undergoing:
- add equals for update fields
- add messages to fails
- add logging to put each field
- add logging when autocomplete cuts
Proposed:
- make tests methods independent, add cleanup before and after
- add notnull support for @NotNull annotation and @Column nullable.
- add separate classes for read services and write services/separate delete/function switch
- add support for Ag Grid
-- refactor cb/query/root
Proposed admin :
--- add separate profile for github build and local with postgres
--- read me update
Rejected
- add better field producer for string with english words